{# --- Front Matter --- #}
---
title: Dosing Data Blog # Or your actual site title
layout: base.njk # Uses _includes/base.njk
permalink: / # Generates index.html at the root
---

{# This extends the base layout. The content below goes into the 'content' block defined in base.njk #}
{% extends "base.njk" %}

{# Import your post card macro, path relative to _includes #}
{% import "macros/post-card.njk" as cards %}

{# Define the content that goes into the 'content' block of base.njk #}
{% block content %}

  {# --- START: Hero Section Logic (Using Loop Method for Center Post) --- #}

  {# Get all featured posts from the collection defined in .eleventy.js #}
  {% set featured = collections.featuredPosts %}

  {# Find the single post marked as the center feature - Loop Method #}
  {% set centerPost = null %} {# Initialize #}
  {% for post in featured %}
    {# Check if the flag is boolean true (verified via debugging) #}
    {% if post.data.featured_center === true %}
        {% set centerPost = post %}
        {# Nunjucks doesn't have 'break', loop continues but var gets set #}
    {% endif %}
  {% endfor %}

  {# Get potential side posts: start with all featured posts #}
  {% set potentialSidePosts = featured %}
  {# If a center post was found, remove it from the potential side posts list #}
  {% if centerPost %}
    {# Uses rejectattr filter: keeps items where 'url' is NOT equal to centerPost's url #}
    {% set potentialSidePosts = featured | rejectattr("url", "equalto", centerPost.url) %}
  {% endif %}
  {# Take only the first 4 remaining posts to be side posts #}
  {% set sidePosts = potentialSidePosts | slice(0, 4) %}

  {# Split the final side posts into left (first 2) and right (next 2) groups #}
  {% set leftPosts = sidePosts | slice(0, 2) %}
  {% set rightPosts = sidePosts | slice(2, 4) %}

  {# --- START: Render Hero Section --- #}
  {# Render the section only if there's content (a center post or at least one side post) #}
  {% if centerPost or sidePosts.length > 0 %}
    <section class="hero-section">

      {# Left Side Column #}
      <div class="hero-side hero-left">
        {% for post in leftPosts %}
          {# Call the macro to render a small post card #}
          {{ cards.postCard(post, 'small') }}
        {% endfor %}
      </div>

      {# Center Column Wrapper (includes vertical line styling via CSS) #}
      <div class="hero-center-wrapper">
        {% if centerPost %}
          {# Call the macro to render a large post card #}
          {{ cards.postCard(centerPost, 'large') }}
        {% elif leftPosts.length == 0 and rightPosts.length == 0 and featured.length > 0 %}
           {# Optional Fallback: If NO specific center post was marked,
               AND no side posts ended up being selected (e.g., only 1 featured total),
               you could uncomment the next line to render the *first* featured post
               as large in the center spot. Otherwise, the center stays empty. #}
           {# {{ cards.postCard(featured[0], 'large') }} #}
        {% endif %}
      </div>

      {# Right Side Column #}
      <div class="hero-side hero-right">
        {% for post in rightPosts %}
          {# Call the macro to render a small post card #}
          {{ cards.postCard(post, 'small') }}
        {% endfor %}
      </div>

    </section> {# End of hero-section #}

    {# Horizontal separator line below the hero section #}
    <hr class="hero-separator">

  {% endif %} {# End of condition to render hero section #}
  {# --- END: Render Hero Section --- #}


  {# --- START: Rest of the content (More Posts) --- #}
  <h2>More Posts</h2>
  <div class="post-grid"> {# Assumes you have styling for .post-grid #}

    {# Build a list of URLs for posts already shown in the hero section #}
    {# Use working Nunjucks list concatenation: list = list + [newItem] #}
    {% set heroUrlsList = [] %}
    {% if centerPost %} {# This depends on centerPost being found correctly now #}
      {% set heroUrlsList = heroUrlsList + [centerPost.url] %}
    {% endif %}
    {# Add URLs from the *actual* side posts that were selected #}
    {% for post in sidePosts %} {# This depends on sidePosts being populated correctly #}
      {% set heroUrlsList = heroUrlsList + [post.url] %}
    {% endfor %}

    {# Loop through ALL posts sorted by date (from collections.posts) #}
    {% for post in collections.posts %}
      {# Check if the current post's URL is NOT in the list of hero post URLs #}
      {% if post.url not in heroUrlsList %}

        {# Render the standard post preview for non-hero posts #}
        <article class="post-preview">
           {# Use the 'url' filter for robust link generation #}
           <a href="{{ post.url | url }}" class="post-preview__link">

             {% if post.data.featuredImage %}
             <div class="post-preview__image-container">
               {# Use the 'url' filter for robust image path generation #}
               <img src="{{ post.data.featuredImage | url }}" alt="" class="post-preview__image">
             </div>
             {% endif %}

             <div class="post-preview__content">
               <h3 class="post-preview__title">{{ post.data.title }}</h3>
               {% if post.data.excerpt %}
               <p class="post-preview__excerpt">{{ post.data.excerpt }}</p>
               {% endif %}
               {# Use date filters defined in .eleventy.js #}
               <time datetime="{{ post.date | htmlDateString }}" class="post-preview__date">{{ post.date | readableDate }}</time>
             </div>

           </a>
         </article>

      {% endif %} {# Closes 'if post.url not in heroUrlsList' #}
    {% endfor %} {# Closes 'for post in collections.posts' #}

  </div> {# End of post-grid #}
  {# --- END: Rest of the content --- #}

{% endblock %}